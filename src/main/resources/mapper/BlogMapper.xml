<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zpc.coderhome.dao.BlogMapper">
  <resultMap id="BaseResultMap" type="com.zpc.coderhome.model.Blog">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="date" jdbcType="VARCHAR" property="date" />
    <result column="author_id" jdbcType="INTEGER" property="authorId" />
    <result column="category_id" jdbcType="INTEGER" property="categoryId" />
    <result column="intro_image" jdbcType="VARCHAR" property="introImage" />
<!--    <result column="showed_content" jdbcType="LONGVARCHAR" property="showedContent"/>-->
<!--    <result column="content" jdbcType="LONGVARCHAR" property="content" />-->
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.zpc.coderhome.model.Blog">
    <result column="showed_content" jdbcType="LONGVARCHAR" property="showedContent" />
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, title, date, author_id
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" resultType="com.zpc.coderhome.model.Blog">
    select a.id as id, a.title as title, a.showed_content as showedContent, a.content as content, a.date as date,a.author_id as authorId,a.category_id as categoryId,a.intro_image as introImage,b.name as name,b.porti_image as portiImage
    from blog as a left join user_info as b on a.author_id = b.id
where a.id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectCountByUseridAndCa" resultType="java.lang.Integer">
    select count(id) from blog where author_id = #{userid,jdbcType=INTEGER} and category_id = #{ca,jdbcType=INTEGER}
  </select>
  <select id="selectCountByUserid" resultType="java.lang.Integer">
    select count(id) from blog where author_id = #{userid,jdbcType=INTEGER}
  </select>
  <select id="selectByUseridAndCa" resultMap="BaseResultMap">
    select id,title,content,date,author_id,category_id,intro_image
from blog where author_id = #{userid,jdbcType=INTEGER} and category_id = #{ca,jdbcType=INTEGER} limit #{bias,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
  </select>
  <select id="selectByUserId_web" resultMap="BaseResultMap">
    select id,title,content,date,author_id,category_id,intro_image
from blog where author_id = #{userid,jdbcType=INTEGER} limit #{bias,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
  </select>
  <!--这个地方的userid其实不是userinfo的id,这个查找的方法selectByUserId应该改成selectById-->
  <select id="selectByUserId" resultType="com.zpc.coderhome.model.Blog">
    select a.id as id, a.title as title, a.showed_content as showedContent, a.content as content, a.date as date,a.author_id as authorId,a.category_id as categoryId,a.intro_image as introImage,b.name as name,b.porti_image as portiImage
    from blog as a left join user_info as b on a.author_id = b.id
    where a.id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultType="com.zpc.coderhome.model.Blog">
    select a.id as id, a.title as title, a.showed_content as showedContent, a.content as content, a.date as date,a.author_id as authorId,a.category_id as categoryId,a.intro_image as introImage,b.name as name,b.porti_image as portiImage
    from blog as a left join user_info as b on a.author_id = b.id
  </select>
  <select id="selectByCategory" resultType="com.zpc.coderhome.model.Blog">
    select a.id as id, a.title as title, a.showed_content as showedContent,a.content as content, a.date as date,a.author_id as authorId,a.category_id as categoryId,a.intro_image as introImage,b.name as name,b.porti_image as portiImage
    from blog as a left join user_info as b on a.author_id = b.id
    where a.category_id = #{categoryId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from blog
    where id = #{id,jdbcType=INTEGER} and author_id = #{authorId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zpc.coderhome.model.Blog">
    insert into blog (id, title, date, 
      author_id, content)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{date,jdbcType=VARCHAR}, 
      #{authorId,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zpc.coderhome.model.Blog">
    insert into blog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="authorId != null">
        author_id,
      </if>
      <if test="showedContent != null">
        showed_content,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="categoryId != null">
        category_id,
      </if>
      <if test="introImage != null">
        intro_image,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        #{date,jdbcType=VARCHAR},
      </if>
      <if test="authorId != null">
        #{authorId,jdbcType=INTEGER},
      </if>
      <if test="showedContent != null">
        #{showedContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="introImage != null">
        #{introImage,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zpc.coderhome.model.Blog">
    update blog
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=VARCHAR},
      </if>
      <if test="authorId != null">
        author_id = #{authorId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zpc.coderhome.model.Blog">
    update blog
    set title = #{title,jdbcType=VARCHAR},
      date = #{date,jdbcType=VARCHAR},
      author_id = #{authorId,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zpc.coderhome.model.Blog">
    update blog
    set title = #{title,jdbcType=VARCHAR},
      date = #{date,jdbcType=VARCHAR},
      author_id = #{authorId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>